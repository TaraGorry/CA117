Task:
Password securiety is a problem when users choose passwords 
that can be easily guessed.
Write a Python program that assesses the security of a password 
by counting the number of character classes it contains.

For our purposes there are four character classes: 
 - digits
 - lower case letters
 - upper case letters
 - special characters (i.e. everything else).

Write a program called password_012.py that reads passwords from stdin.
For each password read the program should print out the number of character classes it contains.

HINT:
Use pydoc or help to have a look at the str class documentation. 
You will find described therein various methods that will be useful in determining the class of each character in the string.

Example Input:
256
abc
aBc
1aBc2
^@())($$$
^@a1())B($43$$

Example Output:
1
1
2
3
1
4


Solution (without Functions):

#!/usr/bin/env python3

import sys

for password in sys.stdin:
  password = password.strip()
  counter = 0
  if(any(char.isdigit() for char in password)):
    counter += 1
  if (any(char.islower() for char in password)):
    counter += 1
  if (any(char.isupper() for char in password)):
    counter += 1
  if (any(not char.isalnum() for char in password)):
    counter += 1
  print(counter)



Solution (with Functions):
 
#!/usr/bin/env python3

import sys

def countClasses(s):
  classCount = [0, 0, 0, 0]
  for c in s:
    if c.islower():
      classCount[0] = 1
    elif c.isupper():
      classCount[1] = 1
    elif c.isdigit():
      classCount[2] = 1
    else:
      classCount[3] = 1
  return sum(classCount)

for line in sys.stdin:
  print(countClasses(line.strip()))
