Task:
In student_081.py define a Student class to model a student.

A student has three data attributes:
  - sid 
    (student ID)
  - name
  - modlist 
    (the list of modules for which the student is registered)

The Student class defines the following instance methods:
  - set_attributes()
    sets the instance's attributes to the specified values
  - print_attributes()
    prints the instance's attributes
  - add_module()
    adds a module (passed as an argument) to modlist (has no effect if modlist already contains the module)
  - del_module()
    removes a module (passed as an argument) from modlist (has no effect if the module is not in modlist)

When your class is correctly implemented, running the following program should produce the given output.

from student_081 import Student

def main():

    s1 = Student()

    s1.set_attributes(15234654, 'Jimmy Murphy', ['CA116'])
    s1.print_attributes()

    assert(s1.name == 'Jimmy Murphy')
    assert(s1.sid == 15234654)
    assert(s1.modlist == ['CA116'])

    s1.add_module('CA117')
    s1.print_attributes()

    s1.add_module('CA100')
    s1.del_module('CA116')
    s1.print_attributes()

    assert(s1.modlist == ['CA117', 'CA100'])

if __name__ == '__main__':
    main()

ID: 15234654
Name: Jimmy Murphy
Modules: CA116
ID: 15234654
Name: Jimmy Murphy
Modules: CA116, CA117
ID: 15234654
Name: Jimmy Murphy
Modules: CA117, CA100


Solution:

#!/usr/bin/env python3

class Student(object):

  def set_attributes(self, sid=0, name="", module=[]):
    self.sid = sid
    self.name = name
    self.module = module

  def add_module(self, modlist):
    self.modlist.append(modlist)

  def del_module(self, modlist):
    self.modlist.remove(modlist)

  def print_attributes(self):
    modlist = ", ".join(self.modlist)
    print(f"ID: {self.sid}\nName: {self.name}\nModules: {modlist}")
