Task:
Write a program called numcomps_031.py that uses a for loop and the range function to generate a list containing the numbers 1, 2, 3, ..., N (Where N is an integer supplied from stdin).
Use list comprehensions to have your program extract, from the above list, the following:

  1. All multiples of 3.
  2. The squares of all multiples of 3.
  3. The double of all multiples of 4.
  4. All multiples of either 3 or 4.
  5. All multiples of both 3 and 4.

Here is an example of how the program should behave:

$ cat numcomps_stdin_00_031.txt
8
12

$ python3 numcomps_031.py < numcomps_stdin_00_031.txt
Multiples of 3: [3, 6]
Multiples of 3 squared: [9, 36]
Multiples of 4 doubled: [8, 16]
Multiples of 3 or 4: [3, 4, 6, 8]
Multiples of 3 and 4: []
Multiples of 3: [3, 6, 9, 12]
Multiples of 3 squared: [9, 36, 81, 144]
Multiples of 4 doubled: [8, 16, 24]
Multiples of 3 or 4: [3, 4, 6, 8, 9, 12]
Multiples of 3 and 4: [12]


Solution:

#!/usr/bin/env python3

import sys

nums = sys.stdin.readlines()

def numcomps():
  for n in nums:
  n = n.strip()
  print("Multiples of 3:", [x for x in range(1, int(n) + 1) if x % 3 == 0])
  print("Multiples of 3 squared:", [x*x for x in range(1, int(n) + 1) if x % 3 == 0])
  print("Multiples of 4 doubled:", [x*2 for x in range(1, int(n) + 1) if x % 4 == 0])
  print("Multiples of 3 or 4:", [x for x in range(1, int(n) + 1) if x % 3 == 0 or x % 4 == 0])
  print("Multiples of 3 and 4:", [x for x in range(1, int(n) + 1) if x % 3 == 0 and x % 4 == 0])

numcomps()
