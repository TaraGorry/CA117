Task:
In queue_101.py define a Queue class to model the queue abstract data type as follows:

                C Queue
                --------
                List 1
                --------
                __init__()
                enqueue()
                dequeue()
                first()
                is_empty()
                __len__()

Each box consists of three compartments:
  - class name
  - data attributes
  - methods

When your class is correctly implemented, running the following program should produce the given output.

from queue_101 import Queue

def main():

    q = Queue()

    print(len(q))
    q.enqueue(1)
    print(q.first())
    print(q.is_empty())
    print(q.dequeue())
    print(q.is_empty())
    try:
        print(q.dequeue())
    except IndexError:
        print('Error')
    try:
        print(q.first())
    except IndexError:
        print('Error')
    q.enqueue('cat')
    q.enqueue('dog')
    q.enqueue('fish')
    print(len(q))
    print(q.dequeue())
    print(q.dequeue())
    print(q.dequeue())
    print(q.is_empty())

if __name__ == '__main__':
    main()

0
1
False
1
True
Error
Error
3
cat
dog
fish
True


Solution:

#!/usr/bin/env python3

class Queue(object):
  
  def __init__(self):
    self.l = []

  def enqueue(self, e):
    self.l.append(e)

  def dequeue(self):
    return self.l.pop(0)

  def first(self):
    return self.l[0]

  def is_empty(self):
    return len(self.l) == 0

  def __len__(self):
    return len(self.l)
